#!/bin/bash -e
#
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.
#

buildId=$(date +"%Y-%m-%d_%H%M%S_%s")
timeEpoch=$(date +%s)
scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
scriptName=`basename "$0"`
quickSauceHome=$( echo "${scriptPath%/*}" )




source ${scriptPath}/start-000-piestry-base

# process captured responses
function text-to-json {
    for f in ls ${capturePath}/*.txt
    do
        filename=$(basename -- "$f")
        filename="${filename%.*}"
        j="${capturePath}/${filename}.json"
        jq '' ${f} > ${j}
        [[ ${?} == 0 ]] && rm ${f} || rm ${j}
    done
}


function cleanup {
    printf "\n\n"
    printf "\nReview transactions at local path and in dashboard.\n"
    printf "path: %s\n\n" ${capturePath}
    printf "URL: %s\n\n" ${projectDashboardURL}
}


trap cleanup EXIT


# make capture path
mkdir -p ${capturePath}
printf "\nTransactions will be captured locally.\n"
printf "path: %s\n\n" ${capturePath}


# set project url
projectId=$(curl --location --silent --request GET ${baseURL} | jq --raw-output .id)
projectURL="https://app.${SAUCE_DC}.saucelabs.com/api-testing/project/${projectId}"
projectLoggerURL="${projectURL}/logger"
projectDashboardURL="${projectURL}/dashboard/logs?event=false&mode=all&build="${buildId}""

printf "\nTransactions are availbe for review in the project dashboard and filtered by build.\n"
printf "URL: %s\n\n" ${projectDashboardURL}


# start piestry
read  -n 1 -p "Press return to start service."
printf "Starting API mocking server in end-to-end mode.\n"
docker run --rm --pull always ${options} \
    --volume "${quickSauceHome}/specs:/specs" \
    --publish 6000:5000 \
    quay.io/saucelabs/piestry \
    --validate-request \
    --validate-examples \
    -u /specs/demo-api.yaml \
    --e2e --capture /${captureDir} \
    --logger "${baseURL}/insights/events/_contract?buildId="${buildId}""